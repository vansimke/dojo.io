.html-fixed,
.page-docs {
	height: 100%;
	min-height: 100%;
	@include tablet {
		overflow: hidden;
	}
}

.message-modal {
	position: absolute;
	max-height: calc(100vh - #{2*$navbar-height});

	.modal-spinner {
		display: none;
		text-align: center;

		svg {
			height: 70px;
			width: 70px;
			g {
				fill: $grey-lighter;
			}
		}
	}

	.modal-content {
		width: 80%;
		max-width: 640px;
		padding: 2rem;
		margin: 0;
		background-color: white;
	}

	&[data-message-type="loading"] {
		.message-heading,
		.message-content {
			display: none;
		}

		.modal-spinner {
			display: block;
		}
	}
}

.page-docs {
	display: flex;
	flex-direction: column;
	width: 100%;
	padding: 0;

	.docs-layout {
		position: relative;
		flex-grow: 1;
	}

	@include tablet {
		.docs-layout {
			flex: 1 1 auto;
			overflow: hidden;
			margin: 0;
			width: 100%;
			.docs-column {
				overflow-y: auto;
			}
		}
	}

	.header {
		flex: 0 0 auto;
	}

	.footer {
		flex: 0 0 auto;
	}

	.docs-nav {
		background: $border;

		// For consistency with the search button in navbar-brand
		.navbar-item.is-hidden-desktop:hover {
			background: $navbar-item-hover-background-color;
		}

		.navbar-brand {
			.github-button {
				margin-left: auto;
			}

			// The search button is to the left of the burger, and will provide
			// the left margin
			.navbar-burger {
				margin-left: 0;
			}
		}

		.type-legend {
			display: none;
			align-items: center;
			text-transform: none;

			// Don't display the search button at the end of the navbar (outside
			// the brand) when the view is not in desktop mode
			@media screen and (min-width: $desktop) {
				padding-top: 0;
				padding-bottom: 0;
			}

			.legend-column {
				margin-right: 1rem;
			}

			.is-type {
				display: flex;
				align-items: center;
			}
		}

		// Don't display the search button at the end of the navbar (outside
		// the brand) when the view is not in desktop mode
		@media screen and (max-width: $desktop) {
			> .search-button {
				display: none;
			}
		}
	}

	&[data-doc-type="api"] .type-legend {
		display: flex;
	}

	// Highlight 'active' search buttons using global page state
	&.is-searching .navbar-item.search-button,
	&[data-doc-type="docs"] .navbar-item[data-doc-type="docs"],
	&[data-doc-type="api"] .navbar-item[data-doc-type="api"] {
		background-color: $primary;
		color: $light;
	}

	.docs-nav [data-doc-type] {
		display: none;
	}

	.has-api [data-doc-type="api"],
	.has-docs [data-doc-type="docs"] {
		display: flex;
	}

	// Remove the shadow from navbar menus in non-desktop mode; the background
	// contrast is sufficient.
	@media screen and (max-width: $desktop) {
		.navbar-menu {
			box-shadow: none;
		}
	}

	.docs-menu,
	.docs-content {
		// inertial scrolling in Safari
		-webkit-overflow-scrolling: touch;
	}

	.docs-menu {
		background: $light;
		border-right: 1px solid $border;
		padding: 0.75rem 0;

		.tabs.is-toggle {
			margin-bottom: 0;
			ul {
				margin: 0;
				padding: 0 1rem;
			}
		}

		@media screen and (max-width: $tablet) {
			border-bottom: 1px solid $border;
		}
	}

	.docs-content {
		position: relative;
		padding-left: 5vw;
		padding-right: 5vw;
		padding-bottom: 1.5rem;

		h1 {
			border-bottom: 1px solid $border;
			padding-bottom: 0.75rem;
			margin-bottom: 1rem;

			.logo {
				height: 1em;
				margin-right: 0.75rem;
			}
		}

		ul,
		ol {
			padding-left: $gap/2;
		}

		ul ul,
		ol ul,
		code {
			margin-bottom: 0;
		}
	}

	.menu {
		ul {
			list-style: none;
			margin-bottom: 0;
		}

		li .sigil {
			font-size: inherit;
		}

		.menu-list {
			> li > ul {
				display: none;
			}

			> li.is-active-page > ul {
				display: block;
			}

			li {
				padding-top: 0.1rem;
				padding-bottom: 0.1rem;
			}

			// For desktop views,
			@media screen and (min-width: $tablet) {
				ul  {
					font-size: 90%;
				}
			}

			ul  {
				margin-bottom: 0;
			}

			> li > ul {
				margin-top: 0.5rem;

				ul {
					margin-top: 0.25rem;
				}
			}

			a {
				padding-top: 0.25em;
				padding-bottom: 0.25em;

				span {
					text-overflow: ellipsis;
					overflow: hidden;
				}
			}
		}
	}

	.search-panel {
		position: absolute;
		align-items: start;
		background: $light;
		z-index: 50;
		top: 4px;
		right: 4px;
		width: 20rem;
		padding: 0;
		overflow: hidden;

		display: none;

		.menu-list {
			> li > ul {
				display: block;
			}
			> li:last-child {
				margin-bottom: 1rem;
			}
			> li:first-child {
				margin-top: 1rem;
			}
		}

		.menu {
			max-height: 15rem;
			max-width: 20rem;
			overflow: auto;
		}

		.no-results {
			color: $secondary;
		}

		.search-field {
			width: 100%;
			min-width: 8em;
			padding: 0.75rem;
			margin: 0;
			background: $border;

			input {
				box-shadow: none;
				border-right: none;
				border-color: $primary;
			}

			.control .button {
				border-left: none;
				border-color: $primary;
				color: $secondary;
				// width matches padding in select dropdown
				width: 2.5em;
			}
		}
	}

	&.is-searching {
		.search-panel {
			display: flex;
			flex-direction: column;
		}

		// When search is active in mobile mode, hide the doc menu
		@media screen and (max-width: $tablet) {
			.docs-menu {
				display: none;
			}
		}
	}

	@media screen and (max-width: $tablet) {
		.search-panel {
			position: static;
			width: auto;
			border: none;
			border-bottom: solid 1px $border;
			border-radius: 0;
			box-shadow: none;

			.search-field {
				padding-left: 1.75rem;
				padding-right: 1.75rem;
				border: none;
				width: 100%;
				background: none;
			}

			.menu {
				max-height: none;
				max-width: none;
			}

			.menu-list {
				> li:first-child {
					margin-top: 0;
				}
			}

		}
	}

	blockquote.warning,
	blockquote.info,
	blockquote.deprecated {
		position: relative;
		display: flex;
		flex-direction: row;
		align-items: center;
		padding-left: 0;

		div {
			flex-grow: 0;
			flex-shrink: 0;
			width: 60px;
			text-align: center;
		}

		.fa {
			font-size: 1.5em;
		}

		p {
			flex: 0 1 auto;
		}
	}
	blockquote.warning .fa {
		color: $warning;
	}
	blockquote.info .fa {
		color: $primary;
	}
	blockquote.deprecated .fa {
		color: $grey;
	}

	table {
		th, td {
			// Tighten up the padding in API tables
			padding: 0.25em 0.5em;
		}

		th {
			background: $grey-dark;
			border-color: $grey-darker;
			color: $light;
		}
	}

	.navbar select {
		text-transform: none;
	}

	.navbar .version-selector {
		padding-left: 0;
		display: none;
	}

	&.multi-version .navbar .version-selector {
		display: flex;
	}

	.is-type::before {
		font-family: FontAwesome;
		margin-right: 0.5em;
		font-size: 60%;
	}

	h2.is-type::before,
	h3.is-type::before {
		font-size: 50%;
	}

	.is-type-callable::before {
		// circle-play
		content: '\f144';
	}

	.is-type-constructor::before {
		// circle-plus
		content: '\f055';
	}

	.is-type-class::before {
		// square
		content: '\f0c8';
	}

	.is-type-interface::before {
		// empty square
		content: '\f096';
	}

	.is-type-property::before {
		// circle
		content: '\f111';
	}

	.is-type-value::before {
		// hash
		content: '\f292';
	}

	code .tag {
		font-family: $family-sans-serif;
		margin-right: 1em;
	}

	.has-heading-icons {
		display: flex;
		align-items: center;

		.heading-icons {
			flex-grow: 1;
			display: flex;
			flex-direction: row;

			> span:first-child {
				flex-grow: 1;
				display: inline-block;
			}
			> span:last-child {
				flex-grow: 0;
			}

			a {
				display: flex;
				align-items: center;
			}

			.source-link::before {
				// code
				content: '\f121';
				font-family: FontAwesome;
				font-size: 60%;
				font-weight: normal;
			}

			.edit-page::before {
				// file-text-o
				content: '\f0f6';
			}
		}
	}

	.api-metadata {
		.api-label {
			font-weight: bold;
		}
	}

	.type-arg {
		&::before {
			content: '<';
		}
		&::after {
			content: '>';
		}
	}

	.type-list {
		> *::after {
			content: ', ';
		}
		> *:last-child::after {
			content: '';
		}
	}

	.type-union {
		> *::after {
			content: ' | ';
		}
		> *:last-child::after {
			content: '';
		}
	}
}

.no-script {
	.docs-menu {
		display: none;
	}

	.docs-content {
		margin-left: auto;
		margin-right: auto;
		max-width: 50rem;
	}
}

.coming-soon {
	max-width: 300px;
}

.spinner {
	> div {
		width: 18px;
		height: 18px;
		margin: 0 4px;
		background-color: $border;
		border-radius: 100%;
		display: inline-block;
		animation: spinner-bouncedelay 1.4s infinite ease-in-out both;
	}

	.bounce1 {
		animation-delay: -0.32s;
	}

	.bounce2 {
		animation-delay: -0.16s;
	}

	@keyframes spinner-bouncedelay {
		0%, 80%, 100% {
			transform: scale(0);
		} 40% {
			transform: scale(1.0);
		}
	}
}
